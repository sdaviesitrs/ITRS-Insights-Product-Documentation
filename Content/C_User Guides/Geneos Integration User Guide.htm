<?xml version="1.0" encoding="utf-8"?>
<html MadCap:lastBlockDepth="5" MadCap:lastHeight="5759" MadCap:lastWidth="9220" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title>Integrate With ITRS Geneos</title>
        <style type="text/css">
/*
:Author: David Goodger (goodger@python.org)
:Id: $Id: html4css1.css 7614 2013-02-21 15:55:51Z milde $
:Copyright: This stylesheet has been placed in the public domain.
Default cascading style sheet for the HTML output of Docutils.
See http://docutils.sf.net/docs/howto/html-stylesheets.html for how to
customize this style sheet.
*/
/* used to remove borders from tables and images */
.borderless,
table.borderless td,
table.borderless th
{
	border: 0;
}
table.borderless td,
table.borderless th
{
	/* Override padding for "table.docutils td" with "! important".
 The right padding separates the table cells. */
	padding: 0 0.5em 0 0 !important;
}
.first
{
	/* Override more specific margin styles with "! important". */
	margin-top: 0 !important;
}
.last,
.with-subtitle
{
	margin-bottom: 0 !important;
}
.hidden
{
	display: none;
}
a.toc-backref
{
	text-decoration: none;
	color: black;
}
blockquote.epigraph
{
	margin: 2em 5em;
}
dl.docutils dd
{
	margin-bottom: 0.5em;
}
object[type="image/svg+xml"],
object[type="application/x-shockwave-flash"]
{
	overflow: hidden;
}
/* Uncomment (and remove this text!) to get bold-faced definition list terms
dl.docutils dt {
 font-weight: bold }
*/
div.abstract
{
	margin: 2em 5em;
}
div.abstract p.topic-title
{
	font-weight: bold;
	text-align: center;
}
div.admonition,
div.attention,
div.caution,
div.danger,
div.error,
div.hint,
div.important,
div.note,
div.tip,
div.warning
{
	margin: 2em;
	border: medium outset;
	padding: 1em;
}
div.admonition p.admonition-title,
div.hint p.admonition-title,
div.important p.admonition-title,
div.note p.admonition-title,
div.tip p.admonition-title
{
	font-weight: bold;
	font-family: sans-serif;
}
div.attention p.admonition-title,
div.caution p.admonition-title,
div.danger p.admonition-title,
div.error p.admonition-title,
div.warning p.admonition-title,
.code .error
{
	color: red;
	font-weight: bold;
	font-family: sans-serif;
}
/* Uncomment (and remove this text!) to get reduced vertical space in
 compound paragraphs.
div.compound .compound-first, div.compound .compound-middle {
 margin-bottom: 0.5em }
div.compound .compound-last, div.compound .compound-middle {
 margin-top: 0.5em }
*/
div.dedication
{
	margin: 2em 5em;
	text-align: center;
	font-style: italic;
}
div.dedication p.topic-title
{
	font-weight: bold;
	font-style: normal;
}
div.figure
{
	margin-left: 2em;
	margin-right: 2em;
}
div.footer,
div.header
{
	clear: both;
	font-size: smaller;
}
div.line-block
{
	display: block;
	margin-top: 1em;
	margin-bottom: 1em;
}
div.line-block div.line-block
{
	margin-top: 0;
	margin-bottom: 0;
	margin-left: 1.5em;
}
div.sidebar
{
	margin: 0 0 0.5em 1em;
	border: medium outset;
	padding: 1em;
	background-color: #ffffee;
	width: 40%;
	float: right;
	clear: right;
}
div.sidebar p.rubric
{
	font-family: sans-serif;
	font-size: medium;
}
div.system-messages
{
	margin: 5em;
}
div.system-messages h1
{
	color: red;
}
div.system-message
{
	border: medium outset;
	padding: 1em;
}
div.system-message p.system-message-title
{
	color: red;
	font-weight: bold;
}
div.topic
{
	margin: 2em;
}
h1.section-subtitle,
h2.section-subtitle,
h3.section-subtitle,
h4.section-subtitle,
h5.section-subtitle,
h6.section-subtitle
{
	margin-top: 0.4em;
}
h1.title
{
	text-align: center;
}
h2.subtitle
{
	text-align: center;
}
hr.docutils
{
	width: 75%;
}
img.align-left,
.figure.align-left,
object.align-left
{
	clear: left;
	float: left;
	margin-right: 1em;
}
img.align-right,
.figure.align-right,
object.align-right
{
	clear: right;
	float: right;
	margin-left: 1em;
}
img.align-center,
.figure.align-center,
object.align-center
{
	display: block;
	margin-left: auto;
	margin-right: auto;
}
.align-left
{
	text-align: left;
}
.align-center
{
	clear: both;
	text-align: center;
}
.align-right
{
	text-align: right;
}
/* reset inner alignment in figures */
div.align-right
{
	text-align: inherit;
}
/* div.align-center * { */
/* text-align: left } */
ol.simple,
ul.simple
{
	margin-bottom: 1em;
}
ol.arabic
{
	list-style: decimal;
}
ol.loweralpha
{
	list-style: lower-alpha;
}
ol.upperalpha
{
	list-style: upper-alpha;
}
ol.lowerroman
{
	list-style: lower-roman;
}
ol.upperroman
{
	list-style: upper-roman;
}
p.attribution
{
	text-align: right;
	margin-left: 50%;
}
p.caption
{
	font-style: italic;
}
p.credits
{
	font-style: italic;
	font-size: smaller;
}
p.label
{
	white-space: nowrap;
}
p.rubric
{
	font-weight: bold;
	font-size: larger;
	color: maroon;
	text-align: center;
}
p.sidebar-title
{
	font-family: sans-serif;
	font-weight: bold;
	font-size: larger;
}
p.sidebar-subtitle
{
	font-family: sans-serif;
	font-weight: bold;
}
p.topic-title
{
	font-weight: bold;
}
pre.address
{
	margin-bottom: 0;
	margin-top: 0;
	font: inherit;
}
pre.literal-block,
pre.doctest-block,
pre.math,
pre.code
{
	margin-left: 2em;
	margin-right: 2em;
}
pre.code .ln
{
	color: grey;
}
/* line numbers */
pre.code,
code
{
	background-color: #eeeeee;
}
pre.code .comment,
code .comment
{
	color: #5C6576;
}
pre.code .keyword,
code .keyword
{
	color: #3B0D06;
	font-weight: bold;
}
pre.code .literal.string,
code .literal.string
{
	color: #0C5404;
}
pre.code .name.builtin,
code .name.builtin
{
	color: #352B84;
}
pre.code .deleted,
code .deleted
{
	background-color: #DEB0A1;
}
pre.code .inserted,
code .inserted
{
	background-color: #A3D289;
}
span.classifier
{
	font-family: sans-serif;
	font-style: oblique;
}
span.classifier-delimiter
{
	font-family: sans-serif;
	font-weight: bold;
}
span.interpreted
{
	font-family: sans-serif;
}
span.option
{
	white-space: nowrap;
}
span.pre
{
	white-space: pre;
}
span.problematic
{
	color: red;
}
span.section-subtitle
{
	/* font-size relative to parent (h1..h6 element) */
	font-size: 80%;
}
table.citation
{
	border-left: solid 1px gray;
	margin-left: 1px;
}
table.docinfo
{
	margin: 2em 4em;
}
table.docutils
{
	margin-top: 0.5em;
	margin-bottom: 0.5em;
}
table.footnote
{
	border-left: solid 1px black;
	margin-left: 1px;
}
table.docutils td,
table.docutils th,
table.docinfo td,
table.docinfo th
{
	padding-left: 0.5em;
	padding-right: 0.5em;
	vertical-align: top;
}
table.docutils th.field-name,
table.docinfo th.docinfo-name
{
	font-weight: bold;
	text-align: left;
	white-space: nowrap;
	padding-left: 0;
}
/* "booktabs" style (no vertical lines) */
table.docutils.booktabs
{
	border: 0px;
	border-top: 2px solid;
	border-bottom: 2px solid;
	border-collapse: collapse;
}
table.docutils.booktabs *
{
	border: 0px;
}
table.docutils.booktabs th
{
	border-bottom: thin solid;
	text-align: left;
}
h1 tt.docutils,
h2 tt.docutils,
h3 tt.docutils,
h4 tt.docutils,
h5 tt.docutils,
h6 tt.docutils
{
	font-size: 100%;
}
ul.auto-toc
{
	list-style-type: none;
}

</style>
    </head>
    <body>
        <h1><MadCap:variable name="General.Product Name&#160;Insights (Full)" /> Integration Guide for <MadCap:variable name="General.ProductNameGeneos" /> Users</h1>
        <!-- This has internal links in -->
        <p>The <MadCap:variable name="General.ProductNameGeneos" /> transport can connect to a <MadCap:variable name="General.ProductNameGeneos" /> Gateway with publisher support.</p>
        <h1>Prerequisites</h1>
        <p>
            <MadCap:snippetText src="../Resources/Snippets/Requirements Valo-Geneos Integration.flsnp" />
        </p>
        <h2>Quick Start</h2>
        <p>In this section we will configure a Valo node to stream a single Geneos Dataview.
This assumes that you already have a version of the Geneos Gateway running (See <a href="#id1"><span class="problematic" id="id2">:doc:`requirements`</span></a>) with a CPU plugin running on a Linux system</p>
        <h2>Configure the Gateway</h2>
        <p>Firstly select 'Show pilot features' using the View menu.
This will show the Publishing section in the Navigation window.</p>
        <p>
            <img src="../Resources/Images/gse_pilot.png" />
        </p>
        <p>Next click on the 'Publishing' section to create it:</p>
        <img alt="images/gse_pub_nav.png" src="../Resources/Images/gse_pub_nav.png" />
        <p>Now make sure that publishing is enabled and select nanomsg from the Adapter dropdown:</p>
        <img alt="images/gse_pub_nanomsg_config.png" src="../Resources/Images/gse_pub_nanomsg_config.png" />
        <p>Nanomsg Publishing requires 2 ports (See <a href="#id3"><span class="problematic" id="id4">:ref:`gateway_ports`</span></a>). By default it uses <cite>7070</cite> for publishing and <cite>7071</cite> for requests. If required, change the ports and make a note of them.</p>
        <p>To publish to kafka, select kakfa from the Adapter dropdown, and enter topic-prefix and comma-seperated brokers list:</p>
        <img alt="images/gse_pub_kafka_config.png" src="../Resources/Images/gse_pub_kafka_config.png" />
        <div class="section" id="configure-a-valo-node">
            <h2>Configure a Valo node</h2>
            <p>To configure the node to connect to the Gateway, you must edit <cite>conf/application.conf</cite>. Firstly enable the Geneos
transport by uncommenting <cite>valo.transport.transports.geneos</cite>:</p><pre class="literal-block" xml:space="preserve">
...
//////////////////////////////////////////////////////////////////////////////////////
// Geneos Integration                                                               //
//////////////////////////////////////////////////////////////////////////////////////
valo.transport {
  transports.geneos = com.itrsgroup.transport.geneos.GeneosTransportFactory
  ...
</pre>
            <p>Now add the gateway you configured earlier into the <cite>valo.transport.geneos.gateways</cite> section, select the client and set revelant settings. (See <a href="#id5"><span class="problematic" id="id6">:doc:`gateways`</span></a>):</p>
            <div class="note">
                <p class="first admonition-title">Note</p>
                <p class="last">For nanomsg, if you used the default ports (<cite>7070</cite> and <cite>7071</cite>) you can omit them here. <cite>host</cite> is required though!</p>
            </div><pre class="literal-block" xml:space="preserve">
valo.transport {
    ...
    geneos {
        ...
        gateways: [
            {
                "host" : "localhost",
                "sub-port" : 7070,
                "req-port" : 7071
            }
        ]
...
</pre>
            <p>Finally we need to specify a stream with the a CPU dataview as its source:</p>
            <div class="note">
                <p class="first admonition-title">Note</p>
                <p class="last">The topic specified must match the dataview name, and is case sensitive! Adjust the line below to match one of you cpu dataviews accordingly. e.g. <cite>raw.table.Cpu</cite>, <cite>raw.table.cpu</cite>, <cite>raw.table.CPU</cite>.</p>
            </div>
            <div class="note">
                <p class="first admonition-title">Note</p>
                <p class="last"><cite>auto-config.schema-path</cite> is used to create a schema for a the stream that matches the Linux version of the CPU plugin.</p>
            </div><pre class="literal-block" xml:space="preserve">
valo.transport {
    ...
    geneos {
        ...
        streams: [
            {
                stream: "/streams/demo/geneos/cpu"
                topics: ["raw.table.CPU"]
                auto-config: {
                    schema-path: ${valo.home}"/resources/geneos/plugin-unix-cpu-schema.json"
                }
            }
        ]
    }
</pre>
        </div>
        <div class="section" id="start-valo-and-query-the-stream">
            <h1>Start Valo and Query the Stream</h1>
            <p>Now start the node (See see <a href="#id7"><span class="problematic" id="id8">:ref:`starting_valo`</span></a>):</p>
            <div class="system-message"><pre class="literal-block" xml:space="preserve">./bin/valo-cluster-app
</pre>
            </div>
            <p>In the log you should see something similar to:</p>
            <div class="system-message"><pre class="literal-block" xml:space="preserve">13:44:34.730 INFO  [GatewayBridge] -  Connecting to gateway @ localhost:7070/7071
</pre>
            </div>
            <p>Now we can execute a query (See <a href="#id9"><span class="problematic" id="id10">:ref:`query_a_stream`</span></a>):</p>
            <div class="system-message"><pre class="literal-block" xml:space="preserve">
    from /streams/demo/geneos/cpu
</pre>
            </div>
            <p>And see the Geneos data! :</p>
            <div class="system-message"><pre class="literal-block" xml:space="preserve">16:47:47 {"data":{"sampleTime":"2015-12-07T16:47:47.095Z","name":"cpu_0","row":{"type":"GenuineIntel Intel(R)","state":"on-line","clockSpeed":"3100.00 Mhz","percentUtilisation":1.25,"percentUserTime":0.75,"percentKernelTime":0.5,"percentWaitTime":0,"percentIdle":98.75,"percentIrq":0,"percentSoftIrq":0}},"operation":"update","source":{"entity":"pgw.mynp.ENTITY","dataview":"pgw.mynp.ENTITY.CPU.CPU","gateway":"pgw","probe":"pgw.mynp","sampler":"pgw.mynp.ENTITY.CPU"}}16:47:47 {"data":{"sampleTime":"2015-12-07T16:47:47.095Z","name":"cpu_0_logical#3","row":{"type":"logical","state":"on-line","clockSpeed":"3100.00 Mhz","percentUtilisation":0,"percentUserTime":0,"percentKernelTime":0,"percentWaitTime":0,"percentIdle":100,"percentIrq":0,"percentSoftIrq":0}},"operation":"update","source":{"entity":"pgw.mynp.ENTITY","dataview":"pgw.mynp.ENTITY.CPU.CPU","gateway":"pgw","probe":"pgw.mynp","sampler":"pgw.mynp.ENTITY.CPU"}}</pre><pre class="literal-block" xml:space="preserve">16:47:47 {"data":{"sampleTime":"2015-12-07T16:47:47.095Z","name":"cpu_0_logical#1","row":{"type":"logical","state":"on-line","clockSpeed":"3100.00 Mhz","percentUtilisation":1,"percentUserTime":0,"percentKernelTime":1,"percentWaitTime":0,"percentIdle":99,"percentIrq":0,"percentSoftIrq":0}},"operation":"update","source":{"entity":"pgw.mynp.ENTITY","dataview":"pgw.mynp.ENTITY.CPU.CPU","gateway":"pgw","probe":"pgw.mynp","sampler":"pgw.mynp.ENTITY.CPU"}}
</pre>
            </div>
        </div>
        <p>&#160;</p>
        <h2>Run and Configuring a publishing Gateway</h2>
        <!-- See Valo Integration with Geneos Gateways on ICE https://ice.itrsgroup.com/display/dev/Valo+integration -->
        <h3>Configure Valo</h3>
        <p>Firstly configure the transport:</p><pre class="literal-block" xml:space="preserve">
valo {
    transport-system {
        transports {
            ...
            geneos = com.itrsgroup.transport.geneos.GeneosBridgeFactory
         ...
        }
    }
}
</pre>
        <p>Now the transport specific configuration:</p><pre class="literal-block" xml:space="preserve">
valo {
    transport-system {
        geneos {
            security-domain = "geneos"
            gateways: [...]
            streams: [...]
        }
    }
}
...
</pre>
        <p>The gateways section is a list of either host and ports or simulated
files</p><pre class="literal-block" xml:space="preserve">
valo {
 transport-system {
 geneos {
 ...
 gateways: [
 { host: "localhost" } # sub-port anf req-port are optional, defaults
to 7070 and 7071
 { host: "otherhost", sub-port: 7070, req-port: 7071 }
 ]
 ...
 }
 }
}
...
</pre>
        <p>Finally, you specify the topics and stream mappings like so:</p><pre class="literal-block" xml:space="preserve">
valo {
 transport-system {
 geneos {
 ...
 "streams" : [
 {
 "stream" : "/streams/demo/geneos/cpu"
 "topics" : [ "raw.table.CPU", "other.stream" ]
 }
 {
 "stream" : "/streams/demo/geneos/hardware"
 "topics" : [ "raw.table.HARDWARE" ]
 }
 ]
 ...
 }
 }
}
...
</pre>
        <div class="note">
            <p class="first admonition-title">Note</p>
            <p>Although you can post data to a stream without a schema, you will not be
able to query the data!</p>
            <p>The schema and taxonomy for streams can be 'auto configured' using the
auto-config section:</p><pre class="literal-block" xml:space="preserve">
valo {
    transport-system {
        geneos {
            ...
            "streams" : [
                {
                    "stream" : "/streams/demo/geneos/cpu"
                    "topics" : [ "raw.table.CPU", "other.stream" ]
                    "auto-config": {
                        schema-path: ${valo.home}"/resources/geneos/plugin-unix-cpu-schema.json"
                     taxonomy-path : ${valo.home}"/resources/geneos/plugin-unix-cpu-taxonomy.json"
                        repository: "ssr"
                    }
                }
                ...
            ]
            ...
        }
    }
}
...
</pre>
            <p>Some examples of schema's and taxonomies are provided in the
resources/geneos directory.</p>
            <p class="last">If the repository field is set the stream will be configured to store in
that repository.</p>
        </div>
    </body>
</html>