<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="12" MadCap:lastHeight="6873" MadCap:lastWidth="859">
    <head>
        <link href="" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h1>
            <MadCap:conditionalText MadCap:conditions="Output.Print"><MadCap:variable name="General.Product Name&#160;Insights (Full)" /> </MadCap:conditionalText>Contributor &amp; Domain User Guide</h1>
        <h2 class="nokeyline">
            <MadCap:annotation MadCap:createDate="2016-10-18T15:36:53.7312056+01:00" MadCap:creator="mddent" MadCap:initials="MDD" MadCap:comment="Added to Zendesk Test output" MadCap:editor="mddent" MadCap:editDate="2016-10-18T15:36:54.8915783+01:00">Introduction</MadCap:annotation>
        </h2>
        <p>
            <MadCap:concept term="Streams" />
        </p>
        <p><strong class="green">Contributors</strong> and <strong class="green">Domains </strong> form the lifeblood of <MadCap:variable name="General.Product Name Insights&#160;(abbreviated)" /> - Contributors contain <strong class="green">Streams </strong>that feed it data, while Domains provide a granular level of organization by allowing you to clump together two or more Contributors.</p>
        <p>Contributors are used to assign metadata to each data stream. Domains are dynamic entities that can be used to filter the results of a <strong class="green">query </strong>(see <MadCap:xref href="Query, Search &amp; Transform Data User Guide.htm">[%=General.Product Name&#160;Insights (Full)%] Query,&#160;Search&#160;and Transform Data User Guide</MadCap:xref>). You can use Domains to contextualize and re-use a particular query across different sources
without having to modify it.</p>
        <MadCap:pageBreak />
        <h2>Contributor</h2>
        <MadCap:snippetBlock src="../Resources/Snippets/Definition Contributor.flsnp" />
        <MadCap:snippetBlock src="../Resources/Snippets/About Contributor.flsnp" />
        <MadCap:snippetBlock src="../Resources/Snippets/Example Contributor.flsnp" MadCap:conditions="Output.Null" />
        <p MadCap:conditions="Output.Null">@mdd this comes from here: post on <a href="https://valo.io/blog/post/what-are-streams-in-valo">streams</a></p>
        <p MadCap:conditions="Output.Null">we indirectly assigned metadata about each sensor (eg. area) inside the stream's schema. Because this sensor-specific data does not change with every new event, it may make sense to take it out of the real-time payloads and store it separately as contributor metadata. This means that the unchanging metadata does not need to be POSTed to the stream each time (and potentially wastefully stored), but instead, can be stored once externally. </p>
        <p MadCap:conditions="Output.Null">To set up contributors in Valo, we first need to register the sensors' "contributor type" with an HTTP PUT command with the json schema below. This specifies the metadata fields that we can store for each air quality sensor. In the schema below we have simply defined the contributor type as 'sensor' since we can potentially have different types of sensors with the same contributor type. Note that it is essential to have a field (in this case, 'id') that is a unique identifier for each sensor and has the type 'contributor'.</p><pre MadCap:conditions="Output.Null">
{
“schema” {
    type: “record”,
    properties: {
        id: {"type": “contributor”, "definition": "sensor"},
        area: {"type": “string”},
        manufacturer: {"type": “string”}
        }
    }
}</pre>
        <p MadCap:conditions="Output.Null">The air quality stream's schema (below) should also have the 'id' field of type 'contributor' in order to connect the real time air quality measurements with their corresponding sensor's metadata.</p><pre MadCap:conditions="Output.Null">
{
  "schema": {
    "topDef": {
      "type": "record",
      "properties":
        "id": {"type": “contributor”, "definition": "sensor"},
        "carbonm": { "type": "double"},
        "nitrouso": { "type": "double"},
        "sampleTime": { "type": "datetime"}
      }
    }
  }
}</pre>
        <p MadCap:conditions="Output.Null">Let's say that we have just installed two new sensors in a smart city. After having established the contributor type, we can now assign the specific metadata to each of our sensors with an HTTP PUT command.</p>
        <p MadCap:conditions="Output.Null">Here's an example of what an air quality payload would look like with the contributor id field:</p><pre MadCap:conditions="Output.Null">{
    "id": "3450af"
    "carbonm": 0.05,
    "nitrouso": 0.04,
    "sampleTime": "Thu Jul 7 2016 15:03:53"     
}</pre>
        <MadCap:pageBreak />
        <h2> Domain</h2>
        <MadCap:snippetBlock src="../Resources/Snippets/Definition Domain.flsnp" />
        <MadCap:snippetBlock src="../Resources/Snippets/About Domain.flsnp" />
        <p>For more about querying in <MadCap:variable name="General.Product Name Insights&#160;(abbreviated)" />, see <MadCap:xref href="Query, Search &amp; Transform Data User Guide.htm">[%=General.Product Name&#160;Insights (Full)%] Query,&#160;Search&#160;and Transform Data User Guide</MadCap:xref>.</p>
        <MadCap:snippetBlock src="../Resources/Snippets/Example Domain.flsnp" />
        <MadCap:pageBreak />
        <MadCap:dropDown>
            <MadCap:dropDownHead class="H2NoKeyline">
                <MadCap:dropDownHotspot>What are the benefits of domains?</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <ul>
                    <li>Dynamic sets of Contributors - If a new sensor is added or meta data of any existing sensor is changed, the Domains and any running queries within the Domains would adjust automatically to operate on the updated set of Contributors</li>
                    <li>Querying convenience - Let's say in this smart city there are two local authorities for the West and the East. Creating a different domain for each area would be helpful as the local authorities are only concerned with the data from air sensors in their respective area and do not want to specify the location each time in their queries</li>
                    <li>Control access to data in an organization - If we scale this example to a smart city with lots of different types of sensors and streams of data, domains would be a good way to control access to data so that employees would only have access to the data from the contributors that concern them.</li>
                    <li>Shareable - Imagine a smart city with lots of different local authorities with the same querying needs. The key queries only need to be created in one authority and then shared across all of the different areas.</li>
                </ul>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:pageBreak />
        <MadCap:snippetBlock src="../Resources/Snippets/Interface Domain.flsnp" />
        <MadCap:pageBreak />
        <MadCap:dropDown>
            <MadCap:dropDownHead class="H2NoKeyline">
                <MadCap:dropDownHotspot>Create a Domain</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p>Once you've created the Domain, the active interface tab will become the new Domain's home page. From here, you can <MadCap:xref href="Dashboard, Notebook &amp; Collection User Guide.htm#CreateNewNotebook">Create A&#160;Notebook </MadCap:xref> and <MadCap:xref href="Dashboard, Notebook &amp; Collection User Guide.htm#CreateNewDashboard.">Create a Dashboard</MadCap:xref>.</p>
                <MadCap:snippetBlock src="../Resources/Snippets/How To Create Domain.flsnp" />
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <div class="section" id="cloning-a-domain">
            <MadCap:dropDown>
                <MadCap:dropDownHead class="H2NoKeyline">
                    <MadCap:dropDownHotspot>Clone a Domain</MadCap:dropDownHotspot>
                </MadCap:dropDownHead>
                <MadCap:dropDownBody>
                    <p MadCap:conditions="Output.Null">@mdd procedure requires writing</p>
                    <p>You can easily clone a domain from the Domain menu selecting <MadCap:snippetText src="../Resources/Snippets/Icon Copy to Clipboard.flsnp" />, this allows you to duplicate all the existing notebooks,
queries etc. on that domain and move it to a different domain. </p>
                    <p>So if for
example I have lots of analytics running on my European IT operations, I
can clone the domain and by just updating the domain definition in the
clone have all the same capabilities immediately over my North American
operations.</p>
                </MadCap:dropDownBody>
            </MadCap:dropDown>
        </div>
        <p>
            <MadCap:conceptLink term="Streams" />
        </p>
    </body>
</html>