<?xml version="1.0" encoding="utf-8"?>
<html MadCap:lastBlockDepth="7" MadCap:lastHeight="4439" MadCap:lastWidth="2180" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title>Limitations and Workarounds</title>
        <style type="text/css">
/*
:Author: David Goodger (goodger@python.org)
:Id: $Id: html4css1.css 7614 2013-02-21 15:55:51Z milde $
:Copyright: This stylesheet has been placed in the public domain.
Default cascading style sheet for the HTML output of Docutils.
See http://docutils.sf.net/docs/howto/html-stylesheets.html for how to
customize this style sheet.
*/
/* used to remove borders from tables and images */
.borderless,
table.borderless td,
table.borderless th
{
	border: 0;
}
table.borderless td,
table.borderless th
{
	/* Override padding for "table.docutils td" with "! important".
 The right padding separates the table cells. */
	padding: 0 0.5em 0 0 !important;
}
.first
{
	/* Override more specific margin styles with "! important". */
	margin-top: 0 !important;
}
.last,
.with-subtitle
{
	margin-bottom: 0 !important;
}
.hidden
{
	display: none;
}
a.toc-backref
{
	text-decoration: none;
	color: black;
}
blockquote.epigraph
{
	margin: 2em 5em;
}
dl.docutils dd
{
	margin-bottom: 0.5em;
}
object[type="image/svg+xml"],
object[type="application/x-shockwave-flash"]
{
	overflow: hidden;
}
/* Uncomment (and remove this text!) to get bold-faced definition list terms
dl.docutils dt {
 font-weight: bold }
*/
div.abstract
{
	margin: 2em 5em;
}
div.abstract p.topic-title
{
	font-weight: bold;
	text-align: center;
}
div.admonition,
div.attention,
div.caution,
div.danger,
div.error,
div.hint,
div.important,
div.note,
div.tip,
div.warning
{
	margin: 2em;
	border: medium outset;
	padding: 1em;
}
div.admonition p.admonition-title,
div.hint p.admonition-title,
div.important p.admonition-title,
div.note p.admonition-title,
div.tip p.admonition-title
{
	font-weight: bold;
	font-family: sans-serif;
}
div.attention p.admonition-title,
div.caution p.admonition-title,
div.danger p.admonition-title,
div.error p.admonition-title,
div.warning p.admonition-title,
.code .error
{
	color: red;
	font-weight: bold;
	font-family: sans-serif;
}
/* Uncomment (and remove this text!) to get reduced vertical space in
 compound paragraphs.
div.compound .compound-first, div.compound .compound-middle {
 margin-bottom: 0.5em }
div.compound .compound-last, div.compound .compound-middle {
 margin-top: 0.5em }
*/
div.dedication
{
	margin: 2em 5em;
	text-align: center;
	font-style: italic;
}
div.dedication p.topic-title
{
	font-weight: bold;
	font-style: normal;
}
div.figure
{
	margin-left: 2em;
	margin-right: 2em;
}
div.footer,
div.header
{
	clear: both;
	font-size: smaller;
}
div.line-block
{
	display: block;
	margin-top: 1em;
	margin-bottom: 1em;
}
div.line-block div.line-block
{
	margin-top: 0;
	margin-bottom: 0;
	margin-left: 1.5em;
}
div.sidebar
{
	margin: 0 0 0.5em 1em;
	border: medium outset;
	padding: 1em;
	background-color: #ffffee;
	width: 40%;
	float: right;
	clear: right;
}
div.sidebar p.rubric
{
	font-family: sans-serif;
	font-size: medium;
}
div.system-messages
{
	margin: 5em;
}
div.system-messages h1
{
	color: red;
}
div.system-message
{
	border: medium outset;
	padding: 1em;
}
div.system-message p.system-message-title
{
	color: red;
	font-weight: bold;
}
div.topic
{
	margin: 2em;
}
h1.section-subtitle,
h2.section-subtitle,
h3.section-subtitle,
h4.section-subtitle,
h5.section-subtitle,
h6.section-subtitle
{
	margin-top: 0.4em;
}
h1.title
{
	text-align: center;
}
h2.subtitle
{
	text-align: center;
}
hr.docutils
{
	width: 75%;
}
img.align-left,
.figure.align-left,
object.align-left
{
	clear: left;
	float: left;
	margin-right: 1em;
}
img.align-right,
.figure.align-right,
object.align-right
{
	clear: right;
	float: right;
	margin-left: 1em;
}
img.align-center,
.figure.align-center,
object.align-center
{
	display: block;
	margin-left: auto;
	margin-right: auto;
}
.align-left
{
	text-align: left;
}
.align-center
{
	clear: both;
	text-align: center;
}
.align-right
{
	text-align: right;
}
/* reset inner alignment in figures */
div.align-right
{
	text-align: inherit;
}
/* div.align-center * { */
/* text-align: left } */
ol.simple,
ul.simple
{
	margin-bottom: 1em;
}
ol.arabic
{
	list-style: decimal;
}
ol.loweralpha
{
	list-style: lower-alpha;
}
ol.upperalpha
{
	list-style: upper-alpha;
}
ol.lowerroman
{
	list-style: lower-roman;
}
ol.upperroman
{
	list-style: upper-roman;
}
p.attribution
{
	text-align: right;
	margin-left: 50%;
}
p.caption
{
	font-style: italic;
}
p.credits
{
	font-style: italic;
	font-size: smaller;
}
p.label
{
	white-space: nowrap;
}
p.rubric
{
	font-weight: bold;
	font-size: larger;
	color: maroon;
	text-align: center;
}
p.sidebar-title
{
	font-family: sans-serif;
	font-weight: bold;
	font-size: larger;
}
p.sidebar-subtitle
{
	font-family: sans-serif;
	font-weight: bold;
}
p.topic-title
{
	font-weight: bold;
}
pre.address
{
	margin-bottom: 0;
	margin-top: 0;
	font: inherit;
}
pre.literal-block,
pre.doctest-block,
pre.math,
pre.code
{
	margin-left: 2em;
	margin-right: 2em;
}
pre.code .ln
{
	color: grey;
}
/* line numbers */
pre.code,
code
{
	background-color: #eeeeee;
}
pre.code .comment,
code .comment
{
	color: #5C6576;
}
pre.code .keyword,
code .keyword
{
	color: #3B0D06;
	font-weight: bold;
}
pre.code .literal.string,
code .literal.string
{
	color: #0C5404;
}
pre.code .name.builtin,
code .name.builtin
{
	color: #352B84;
}
pre.code .deleted,
code .deleted
{
	background-color: #DEB0A1;
}
pre.code .inserted,
code .inserted
{
	background-color: #A3D289;
}
span.classifier
{
	font-family: sans-serif;
	font-style: oblique;
}
span.classifier-delimiter
{
	font-family: sans-serif;
	font-weight: bold;
}
span.interpreted
{
	font-family: sans-serif;
}
span.option
{
	white-space: nowrap;
}
span.pre
{
	white-space: pre;
}
span.problematic
{
	color: red;
}
span.section-subtitle
{
	/* font-size relative to parent (h1..h6 element) */
	font-size: 80%;
}
table.citation
{
	border-left: solid 1px gray;
	margin-left: 1px;
}
table.docinfo
{
	margin: 2em 4em;
}
table.docutils
{
	margin-top: 0.5em;
	margin-bottom: 0.5em;
}
table.footnote
{
	border-left: solid 1px black;
	margin-left: 1px;
}
table.docutils td,
table.docutils th,
table.docinfo td,
table.docinfo th
{
	padding-left: 0.5em;
	padding-right: 0.5em;
	vertical-align: top;
}
table.docutils th.field-name,
table.docinfo th.docinfo-name
{
	font-weight: bold;
	text-align: left;
	white-space: nowrap;
	padding-left: 0;
}
/* "booktabs" style (no vertical lines) */
table.docutils.booktabs
{
	border: 0px;
	border-top: 2px solid;
	border-bottom: 2px solid;
	border-collapse: collapse;
}
table.docutils.booktabs *
{
	border: 0px;
}
table.docutils.booktabs th
{
	border-bottom: thin solid;
	text-align: left;
}
h1 tt.docutils,
h2 tt.docutils,
h3 tt.docutils,
h4 tt.docutils,
h5 tt.docutils,
h6 tt.docutils
{
	font-size: 100%;
}
ul.auto-toc
{
	list-style-type: none;
}

</style>
    </head>
    <body>
        <div class="document" id="limitations-and-workarounds">
            <h1>Limitations and Workarounds</h1>
            <div class="section" id="geneos-flexibility-vs-well-defined-valo-data">
                <h2>Geneos Flexibility vs Well defined Valo Data</h2>
                <p><MadCap:variable name="General.ProductNameValo" /> has a well typed system, every stream defines a schema that the data must conform to. Geneos defines tables of data which loosly conform to types, but are largely published as Strings.</p>
                <p>These differences can make it difficult to map Geneos Data to Valo streams, and in some cases it is not possible without falling back to string based types, which is very limiting in terms of Analysis. Most of the power of Valo is the ability to perform analysis over numerical/time based data.</p>
                <p>Some cells in Geneos appear to numerical <strong>most</strong> of the time. Consider the following Dataview:</p>
                <table border="1" class="docutils">
                    <colgroup>
                        <col width="38%" />
                        <col width="19%" />
                        <col width="44%" />
                    </colgroup>
                    <thead valign="bottom">
                        <tr>
                            <th class="head">&#160;</th>
                            <th class="head">a</th>
                            <th class="head">b</th>
                        </tr>
                    </thead>
                    <tbody valign="top">
                        <tr>
                            <td>row1</td>
                            <td>1</td>
                            <td>12.34</td>
                        </tr>
                        <tr>
                            <td>row2</td>
                            <td>2</td>
                            <td>56.5</td>
                        </tr>
                    </tbody>
                </table>
                <p>It would be reasonable to define a Valo schema like so:</p>
                <div class="note">
                    <p class="first admonition-title">Note</p>
                    <p class="last">Some required Geneos fields have been omitted here for brevity</p>
                </div>
                <div class="system-message"><pre class="literal-block" xml:space="preserve">
        {
          "schema": {
            "topDef": {
              "type": "record",
              "properties": {
                "data": {
                  "type": "record",
                  "properties": {
                    "sampleTime": { "type": "datetime" },
                    "name": { "type": "string" },
                    "row": {
                      "type": "record",
                      "properties": {
                        "a": { "type": "int" },
                        "b": { "type": "double" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
</pre>
                </div>
                <p>Unfortunately, on the next sample this dataview looked like this:</p>
                <table border="1" class="docutils">
                    <colgroup>
                        <col width="38%" />
                        <col width="19%" />
                        <col width="44%" />
                    </colgroup>
                    <thead valign="bottom">
                        <tr>
                            <th class="head">&#160;</th>
                            <th class="head">a</th>
                            <th class="head">b</th>
                        </tr>
                    </thead>
                    <tbody valign="top">
                        <tr>
                            <td>row1</td>
                            <td>&#160;</td>
                            <td>12.34</td>
                        </tr>
                        <tr>
                            <td>row2</td>
                            <td>2</td>
                            <td>N/A</td>
                        </tr>
                    </tbody>
                </table>
                <p><cite>row1.a</cite> is an empty string. <cite>row2.b</cite> is the string 'N/A'. Neither of these conform to the schema which specifies them as an <cite>int</cite> and a <cite>double</cite> respectively.</p>
                <p>When the Geneos Transport attempts to publish these rows into Valo, they will be rejected as the data cannot be reasonablly converted to those types.</p>
                <p>In this case, you have 2 choices: Accept that some of the data will be rejected, or change the schema to conform to the Geneos data types, in most cases that will be strings. <MadCap:xref href="Monitoring.htm">Geneos Monitoring</MadCap:xref> and Stream <i>/api_reference/monitoring_api</i> can help you diagnose this type of problems.</p>
            </div>
            <div class="section" id="row-based-updates">
                <h2>Row based updates</h2>
                <p>Geneos sends updates from dataview tables based on the rows of data. Consider the following dataview transition:</p>
                <p>State a</p>
                <table border="1" class="docutils">
                    <colgroup>
                        <col width="33%" />
                        <col width="17%" />
                        <col width="17%" />
                        <col width="17%" />
                        <col width="17%" />
                    </colgroup>
                    <thead valign="bottom">
                        <tr>
                            <th class="head">&#160;</th>
                            <th class="head">a</th>
                            <th class="head">b</th>
                            <th class="head">c</th>
                            <th class="head">d</th>
                        </tr>
                    </thead>
                    <tbody valign="top">
                        <tr>
                            <td>row1</td>
                            <td>x</td>
                            <td>1</td>
                            <td>2</td>
                            <td>3</td>
                        </tr>
                        <tr>
                            <td>row2</td>
                            <td>y</td>
                            <td>4</td>
                            <td>5</td>
                            <td>6</td>
                        </tr>
                    </tbody>
                </table>
                <p>State a'</p>
                <table border="1" class="docutils">
                    <colgroup>
                        <col width="32%" />
                        <col width="16%" />
                        <col width="16%" />
                        <col width="16%" />
                        <col width="21%" />
                    </colgroup>
                    <thead valign="bottom">
                        <tr>
                            <th class="head">&#160;</th>
                            <th class="head">a</th>
                            <th class="head">b</th>
                            <th class="head">c</th>
                            <th class="head">d</th>
                        </tr>
                    </thead>
                    <tbody valign="top">
                        <tr>
                            <td>row1</td>
                            <td>x</td>
                            <td>1</td>
                            <td>2</td>
                            <td>3</td>
                        </tr>
                        <tr>
                            <td>row2</td>
                            <td>y</td>
                            <td>4</td>
                            <td>5</td>
                            <td>99</td>
                        </tr>
                    </tbody>
                </table>
                <p>Only <cite>row2.d</cite> changed, but the entire row will be emitted to Valo. This makes sense for <em>most</em> dataviews, as a row is a 'unit' of information (In the cpu plugin a row is a processor/core, in a network plugin it is an interface). In some dataviews however, this may not make as much sense.</p>
            </div>
            <div class="section" id="column-row-value-based-dataviews">
                <h2>Column/Row Value based dataviews</h2>
                <p>Most dataviews are row based (See above), some are name/value pairs, that is, they only have a single column, like so:</p>
                <table border="1" class="docutils">
                    <colgroup>
                        <col width="46%" />
                        <col width="54%" />
                    </colgroup>
                    <thead valign="bottom">
                        <tr>
                            <th class="head">Name</th>
                            <th class="head">value</th>
                        </tr>
                    </thead>
                    <tbody valign="top">
                        <tr>
                            <td>a</td>
                            <td>x</td>
                        </tr>
                        <tr>
                            <td>b</td>
                            <td>y</td>
                        </tr>
                        <tr>
                            <td>c</td>
                            <td>z</td>
                        </tr>
                    </tbody>
                </table>
                <p>As decribed above, the updates to Valo are row based, this means you will get individual values without any context; in the above example, x, y and z are related. Ideally, this data view would be pivoted like so:</p>
                <table border="1" class="docutils">
                    <colgroup>
                        <col width="47%" />
                        <col width="18%" />
                        <col width="18%" />
                        <col width="18%" />
                    </colgroup>
                    <thead valign="bottom">
                        <tr>
                            <th class="head">&#160;</th>
                            <th class="head">a</th>
                            <th class="head">b</th>
                            <th class="head">c</th>
                        </tr>
                    </thead>
                    <tbody valign="top">
                        <tr>
                            <td>values</td>
                            <td>x</td>
                            <td>y</td>
                            <td>z</td>
                        </tr>
                    </tbody>
                </table>
                <p>Fortunately this can acheived using Gateway computed dataviews. First we create a dataview with no plugin defined. We set the the <cite>createOnGateway</cite> section enabled, and then we define <cite>var-columns</cite> for each row in the source dataview, and a single <cite>var-rows</cite> for the row.</p>
                <div class="system-message"><pre class="literal-block" xml:space="preserve">
.. sourcecode:: xml
        &lt;sampler name="PIVOTED-DATAVIEW"&gt;
            &lt;dataviews&gt;
                &lt;dataview name="PIVOTED-DATAVIEW"&gt;
                    &lt;createOnGateway&gt;
                        &lt;enabled&gt;true&lt;/enabled&gt;
                        &lt;firstColumn&gt;rowId&lt;/firstColumn&gt;
                    &lt;/createOnGateway&gt;
                    &lt;additions&gt;
                        &lt;var-columns&gt;
                            &lt;data&gt;
                                &lt;column&gt;
                                    &lt;data&gt;a&lt;/data&gt;
                                &lt;/column&gt;
                                &lt;column&gt;
                                    &lt;data&gt;b&lt;/data&gt;
                                &lt;/column&gt;
                                &lt;column&gt;
                                    &lt;data&gt;c&lt;/data&gt;
                                &lt;/column&gt;
                            &lt;/data&gt;
                        &lt;/var-columns&gt;
                        &lt;var-rows&gt;
                            &lt;data&gt;
                                &lt;row&gt;
                                    &lt;data&gt;values&lt;/data&gt;
                                &lt;/row&gt;
                            &lt;/data&gt;
                        &lt;/var-rows&gt;
                    &lt;/additions&gt;
                &lt;/dataview&gt;
            &lt;/dataviews&gt;
        &lt;/sampler&gt;
</pre>
                </div>
                <p>Now define a rule that copies the source values into the <cite>PIVOTED-DATAVIEW</cite>. The target is path to the <cite>PIVOTED-DATAVIEW</cite>,
the pathAlias specifies the source dataview and references the pathVariable 'c'.</p>
                <div class="system-message"><pre class="literal-block" xml:space="preserve">
        &lt;rule name="PIVOTED-DATAVIEW-pivot-rule"&gt;
            &lt;targets&gt;
                &lt;target&gt;/geneos/gateway/directory/probe/managedEntity/sampler[(@name=&amp;quot;PIVOTED-DATAVIEW&amp;quot;)]/dataview[(@name=&amp;quot;PIVOTED-DATAVIEW&amp;quot;)]/rows/row[(@name=&amp;quot;data&amp;quot;)]/cell&lt;/target&gt;
            &lt;/targets&gt;
            &lt;priority&gt;1&lt;/priority&gt;
            &lt;pathAliases&gt;
                &lt;pathAlias name="Target"&gt;ancestor::managedEntity/sampler[(param(&amp;quot;PluginName&amp;quot;)=&amp;quot;DATAVIEW&amp;quot;)]/dataview/rows/row[(@name=var(&amp;quot;c&amp;quot;))]/cell[(@column=&amp;quot;Value&amp;quot;)]&lt;/pathAlias&gt;
            &lt;/pathAliases&gt;
            &lt;pathVariables&gt;
                &lt;pathVariable name="c"&gt;
                    &lt;value&gt;
                        &lt;target&gt;
                            &lt;columnName&gt;&lt;/columnName&gt;
                        &lt;/target&gt;
                    &lt;/value&gt;
                &lt;/pathVariable&gt;
            &lt;/pathVariables&gt;
            &lt;block&gt;
                &lt;transaction&gt;
                    &lt;update&gt;
                        &lt;property&gt;@value&lt;/property&gt;
                        &lt;first&gt;
                            &lt;dataItems&gt;
                                &lt;pathAlias ref="Target"&gt;&lt;/pathAlias&gt;
                                &lt;property&gt;@value&lt;/property&gt;
                            &lt;/dataItems&gt;
                        &lt;/first&gt;
                    &lt;/update&gt;
                &lt;/transaction&gt;
            &lt;/block&gt;
        &lt;/rule&gt;
</pre>
                </div>
            </div>
        </div>
    </body>
</html>