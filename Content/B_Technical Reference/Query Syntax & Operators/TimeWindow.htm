<?xml version="1.0" encoding="utf-8"?>
<html MadCap:lastBlockDepth="8" MadCap:lastHeight="2581" MadCap:lastWidth="1023" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title>Time Window</title>
        <style type="text/css">
/*
:Author: David Goodger (goodger@python.org)
:Id: $Id: html4css1.css 7614 2013-02-21 15:55:51Z milde $
:Copyright: This stylesheet has been placed in the public domain.
Default cascading style sheet for the HTML output of Docutils.
See http://docutils.sf.net/docs/howto/html-stylesheets.html for how to
customize this style sheet.
*/
/* used to remove borders from tables and images */
.borderless,
table.borderless td,
table.borderless th
{
	border: 0;
}
table.borderless td,
table.borderless th
{
	/* Override padding for "table.docutils td" with "! important".
 The right padding separates the table cells. */
	padding: 0 0.5em 0 0 !important;
}
.first
{
	/* Override more specific margin styles with "! important". */
	margin-top: 0 !important;
}
.last,
.with-subtitle
{
	margin-bottom: 0 !important;
}
.hidden
{
	display: none;
}
a.toc-backref
{
	text-decoration: none;
	color: black;
}
blockquote.epigraph
{
	margin: 2em 5em;
}
dl.docutils dd
{
	margin-bottom: 0.5em;
}
object[type="image/svg+xml"],
object[type="application/x-shockwave-flash"]
{
	overflow: hidden;
}
/* Uncomment (and remove this text!) to get bold-faced definition list terms
dl.docutils dt {
 font-weight: bold }
*/
div.abstract
{
	margin: 2em 5em;
}
div.abstract p.topic-title
{
	font-weight: bold;
	text-align: center;
}
div.admonition,
div.attention,
div.caution,
div.danger,
div.error,
div.hint,
div.important,
div.note,
div.tip,
div.warning
{
	margin: 2em;
	border: medium outset;
	padding: 1em;
}
div.admonition p.admonition-title,
div.hint p.admonition-title,
div.important p.admonition-title,
div.note p.admonition-title,
div.tip p.admonition-title
{
	font-weight: bold;
	font-family: sans-serif;
}
div.attention p.admonition-title,
div.caution p.admonition-title,
div.danger p.admonition-title,
div.error p.admonition-title,
div.warning p.admonition-title,
.code .error
{
	color: red;
	font-weight: bold;
	font-family: sans-serif;
}
/* Uncomment (and remove this text!) to get reduced vertical space in
 compound paragraphs.
div.compound .compound-first, div.compound .compound-middle {
 margin-bottom: 0.5em }
div.compound .compound-last, div.compound .compound-middle {
 margin-top: 0.5em }
*/
div.dedication
{
	margin: 2em 5em;
	text-align: center;
	font-style: italic;
}
div.dedication p.topic-title
{
	font-weight: bold;
	font-style: normal;
}
div.figure
{
	margin-left: 2em;
	margin-right: 2em;
}
div.footer,
div.header
{
	clear: both;
	font-size: smaller;
}
div.line-block
{
	display: block;
	margin-top: 1em;
	margin-bottom: 1em;
}
div.line-block div.line-block
{
	margin-top: 0;
	margin-bottom: 0;
	margin-left: 1.5em;
}
div.sidebar
{
	margin: 0 0 0.5em 1em;
	border: medium outset;
	padding: 1em;
	background-color: #ffffee;
	width: 40%;
	float: right;
	clear: right;
}
div.sidebar p.rubric
{
	font-family: sans-serif;
	font-size: medium;
}
div.system-messages
{
	margin: 5em;
}
div.system-messages h1
{
	color: red;
}
div.system-message
{
	border: medium outset;
	padding: 1em;
}
div.system-message p.system-message-title
{
	color: red;
	font-weight: bold;
}
div.topic
{
	margin: 2em;
}
h1.section-subtitle,
h2.section-subtitle,
h3.section-subtitle,
h4.section-subtitle,
h5.section-subtitle,
h6.section-subtitle
{
	margin-top: 0.4em;
}
h1.title
{
	text-align: center;
}
h2.subtitle
{
	text-align: center;
}
hr.docutils
{
	width: 75%;
}
img.align-left,
.figure.align-left,
object.align-left
{
	clear: left;
	float: left;
	margin-right: 1em;
}
img.align-right,
.figure.align-right,
object.align-right
{
	clear: right;
	float: right;
	margin-left: 1em;
}
img.align-center,
.figure.align-center,
object.align-center
{
	display: block;
	margin-left: auto;
	margin-right: auto;
}
.align-left
{
	text-align: left;
}
.align-center
{
	clear: both;
	text-align: center;
}
.align-right
{
	text-align: right;
}
/* reset inner alignment in figures */
div.align-right
{
	text-align: inherit;
}
/* div.align-center * { */
/* text-align: left } */
ol.simple,
ul.simple
{
	margin-bottom: 1em;
}
ol.arabic
{
	list-style: decimal;
}
ol.loweralpha
{
	list-style: lower-alpha;
}
ol.upperalpha
{
	list-style: upper-alpha;
}
ol.lowerroman
{
	list-style: lower-roman;
}
ol.upperroman
{
	list-style: upper-roman;
}
p.attribution
{
	text-align: right;
	margin-left: 50%;
}
p.caption
{
	font-style: italic;
}
p.credits
{
	font-style: italic;
	font-size: smaller;
}
p.label
{
	white-space: nowrap;
}
p.rubric
{
	font-weight: bold;
	font-size: larger;
	color: maroon;
	text-align: center;
}
p.sidebar-title
{
	font-family: sans-serif;
	font-weight: bold;
	font-size: larger;
}
p.sidebar-subtitle
{
	font-family: sans-serif;
	font-weight: bold;
}
p.topic-title
{
	font-weight: bold;
}
pre.address
{
	margin-bottom: 0;
	margin-top: 0;
	font: inherit;
}
pre.literal-block,
pre.doctest-block,
pre.math,
pre.code
{
	margin-left: 2em;
	margin-right: 2em;
}
pre.code .ln
{
	color: grey;
}
/* line numbers */
pre.code,
code
{
	background-color: #eeeeee;
}
pre.code .comment,
code .comment
{
	color: #5C6576;
}
pre.code .keyword,
code .keyword
{
	color: #3B0D06;
	font-weight: bold;
}
pre.code .literal.string,
code .literal.string
{
	color: #0C5404;
}
pre.code .name.builtin,
code .name.builtin
{
	color: #352B84;
}
pre.code .deleted,
code .deleted
{
	background-color: #DEB0A1;
}
pre.code .inserted,
code .inserted
{
	background-color: #A3D289;
}
span.classifier
{
	font-family: sans-serif;
	font-style: oblique;
}
span.classifier-delimiter
{
	font-family: sans-serif;
	font-weight: bold;
}
span.interpreted
{
	font-family: sans-serif;
}
span.option
{
	white-space: nowrap;
}
span.pre
{
	white-space: pre;
}
span.problematic
{
	color: red;
}
span.section-subtitle
{
	/* font-size relative to parent (h1..h6 element) */
	font-size: 80%;
}
table.citation
{
	border-left: solid 1px gray;
	margin-left: 1px;
}
table.docinfo
{
	margin: 2em 4em;
}
table.docutils
{
	margin-top: 0.5em;
	margin-bottom: 0.5em;
}
table.footnote
{
	border-left: solid 1px black;
	margin-left: 1px;
}
table.docutils td,
table.docutils th,
table.docinfo td,
table.docinfo th
{
	padding-left: 0.5em;
	padding-right: 0.5em;
	vertical-align: top;
}
table.docutils th.field-name,
table.docinfo th.docinfo-name
{
	font-weight: bold;
	text-align: left;
	white-space: nowrap;
	padding-left: 0;
}
/* "booktabs" style (no vertical lines) */
table.docutils.booktabs
{
	border: 0px;
	border-top: 2px solid;
	border-bottom: 2px solid;
	border-collapse: collapse;
}
table.docutils.booktabs *
{
	border: 0px;
}
table.docutils.booktabs th
{
	border-bottom: thin solid;
	text-align: left;
}
h1 tt.docutils,
h2 tt.docutils,
h3 tt.docutils,
h4 tt.docutils,
h5 tt.docutils,
h6 tt.docutils
{
	font-size: 100%;
}
ul.auto-toc
{
	list-style-type: none;
}

</style>
    </head>
    <body>
        <div class="document" id="time-window">
            <h1>Time Window</h1>
            <p>The time window clause creates a moving window over a specified time
duration. A time window is <strong>always</strong> followed by an
<a href="#id1"><MadCap:xref href="aggregation.htm">Aggregation</MadCap:xref></a>, possibly with a further grouping
clause. Time windows cannot be nested.</p>
            <p>There is an additional syntax which does not require the time field to
be specified. This requires there to be a single datetime field in the
schema.</p>
            <div class="section" id="form">
                <h3>Form:</h3>
                <div class="system-message"><pre class="literal-block" xml:space="preserve">
WINDOW OF &lt;duration&gt;
    SELECT &lt;,group field|aggregator function&gt;

GROUP BY &lt;field&gt;
[TUMBLING|SLIDING]? WINDOW OF &lt;duration&gt; [EVERY &lt;duration]? &lt;,field&gt;
SELECT &lt;,group field|aggregator function&gt;
</pre>
                </div>
            </div>
            <div class="section" id="examples">
                <h3>Examples:</h3>
                <div class="system-message"><pre class="literal-block" xml:space="preserve">
FROM {{book.cpu}}
WINDOW OF 3 seconds
SELECT start, end, avg(user) as user

FROM {{book.cpu}}
GROUP BY timestamp WINDOW OF 3 seconds, host
  SELECT host, start, end, avg(user) as user
</pre>
                </div>
                <p><strong>There are various types of window which you can select. The default is
a tumbling window.</strong>
                </p>
            </div>
            <div class="section" id="tumbling-window">
                <h2><a name="Tumbling"></a>Tumbling Window</h2>
                <p>This is a window that specifies a time frame for focus that updates at
the end of that timeframe. For example, a tumbling window might specify
3 seconds, this means that every 3 seconds the window updates giving the
picture of those last 3 seconds. Thus the first window on a stream will
contain data from seconds 1 to 3, the second window will show seconds 4
to 6, and so on. There is no overlap in what is contained from one
window to the next.</p>
                <p><strong>Default (Tumbling Window)</strong>
                </p>
                <div class="system-message"><pre class="literal-block" xml:space="preserve">
FROM {{book.cpu}}
GROUP BY timestamp WINDOW OF 3 seconds
    SELECT start, end, avg(user) as user
</pre>
                </div>
                <div class="line-block">
                    <div class="line">you can include the start and end timestamps of the window</div>
                    <div class="line-block">
                        <div class="line">FROM {{book.cpu}}</div>
                        <div class="line">GROUP BY timestamp WINDOW OF 3 seconds</div>
                        <div class="line">SELECT first(timestamp) as start, last(timestamp) as end, avg(user)
as user</div>
                    </div>
                </div>
                <p>Note that first and last are standard Online Algorithms rather than
pieces of syntax and can also be used in any sort of aggregation</p>
                <p><strong>Explicit Tumbling Window</strong>
                </p>
                <div class="system-message"><pre class="literal-block" xml:space="preserve">
FROM {{book.cpu}}
GROUP BY timestamp TUMBLING WINDOW OF 3 seconds
    SELECT start, end, avg(user) as user
</pre>
                </div>
            </div>
            <div class="section" id="sliding-window">
                <h2><a name="Sliding"></a>Sliding Window</h2>
                <p>A sliding window is one where the window is of the length specified but
it constantly moves through the flow of data. So for example if you have
data streaming in at a constant rate of 1 payload per second and you
define a window of 10 seconds then every second the window will update
to include the latest information added that (11th) second, but as it is
only 10 seconds in length then the update will also discard the
information from 11 seconds ago (the very first payload).</p>
                <div class="system-message"><pre class="literal-block" xml:space="preserve">
FROM {{book.cpu}}
GROUP BY timestamp SLIDING WINDOW OF 10 seconds
    SELECT start, end, avg(user) as user
</pre>
                </div>
            </div>
            <div class="section" id="hopping-window">
                <h2><a name="Hopping"></a>Hopping Window</h2>
                <p>A hopping window is one which has a defined length but which updates
based on a specified hop length,the hoplength dictating where the next
window starts.So for example if you have a window of length 10 seconds
and a hop length of 2 seconds then 2 seconds after is has started the
window will update, including the last 10 seconds of data, which will
mean discarding the first 2 seconds of data from the previous window,
thus the first window shows data from seconds 1 to 10, the second shows
data from seconds 2 to 12 and so on. Unless the hop length is the same
as the window length then there is overlap in what in contained in one
window and the next.</p>
                <p>In Insights you create this by adding the operator EVERY with the size
of the 'hop'</p>
                <div class="system-message"><pre class="literal-block" xml:space="preserve">
FROM {{book.cpu}}
GROUP BY timestamp WINDOW OF 10 seconds EVERY 2 seconds
    SELECT start, end, avg(user) as user
</pre>
                </div>
                <div class="section" id="group-fields">
                    <h2><a name="Group"></a>Group fields</h2>
                    <p>The following group metadata is generated by a time window.</p>
                    <table border="1" class="docutils">
                        <colgroup>
                            <col width="30%" />
                            <col width="70%" />
                        </colgroup>
                        <thead valign="bottom">
                            <tr>
                                <th class="head"><strong>Field</strong>
                                </th>
                                <th class="head"><strong>Description</strong>
                                </th>
                            </tr>
                        </thead>
                        <tbody valign="top">
                            <tr>
                                <td>start</td>
                                <td>The window start timestamp</td>
                            </tr>
                            <tr>
                                <td>end</td>
                                <td>The window end timestamp</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="section" id="rules">
                <h2><a name="Rules"></a>Rules:</h2>
                <ul class="simple">
                    <li>A time window cannot contain nested time windows.</li>
                </ul>
                <p>Thus the following is an invalid query</p>
                <div class="system-message"><pre class="literal-block" xml:space="preserve">
FROM {{book.cpu}}
WINDOW OF 3 seconds
WINDOW OF 5 seconds
  SELECT start, end, avg(user) AS user
</pre>
                </div>
            </div>
        </div>
    </body>
</html>